// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wsRXF2j5MAPa2EH2XkCbWH
// Component: zPgNTlH1TW2e
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: LPkJNTjVmA5d/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css"; // plasmic-import: wsRXF2j5MAPa2EH2XkCbWH/projectcss
import * as sty from "./PlasmicCopyrightSocialLanguage.module.css"; // plasmic-import: zPgNTlH1TW2e/css
import TwitterIcon from "./icons/PlasmicIcon__Twitter"; // plasmic-import: Nr9-xhQkq1Cc/icon
import YoutubeIcon from "./icons/PlasmicIcon__Youtube"; // plasmic-import: YbPHTgQhvfsG/icon
import PintrestIcon from "./icons/PlasmicIcon__Pintrest"; // plasmic-import: vvChHvW7rAHg/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: VISYn6FlhCX8/icon

export const PlasmicCopyrightSocialLanguage__VariantProps = new Array();

export const PlasmicCopyrightSocialLanguage__ArgProps = new Array();

function PlasmicCopyrightSocialLanguage__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        defaultcss.all,
        projectcss.all,
        projectcss.root_reset,
        sty.root
      )}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(
          defaultcss.all,
          projectcss.all,
          sty.freeBox__qwNrv
        )}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.all,
            sty.freeBox___9OnH1
          )}
        >
          <div
            data-plasmic-name={"text"}
            data-plasmic-override={overrides.text}
            className={classNames(
              defaultcss.all,
              projectcss.all,
              defaultcss.__wab_text,
              sty.text
            )}
          >
            {"Â© 2021 ShoeShop, Inc. All Rights Reserved."}
          </div>

          <div
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.freeBox__wm05Z
            )}
          >
            <Button
              iconOnly={"iconOnly"}
              link={"http://twitter.com"}
              startIcon={
                <TwitterIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__k2ndF
                  )}
                  role={"img"}
                />
              }
            />

            <Button
              className={classNames("__wab_instance", sty.button__k6OJt)}
              iconOnly={"iconOnly"}
              link={"http://youtube.com"}
              startIcon={
                <YoutubeIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg___7WGdl
                  )}
                  role={"img"}
                />
              }
            />

            <Button
              className={classNames("__wab_instance", sty.button__tKJjG)}
              iconOnly={"iconOnly"}
              link={"http://pinterest.com"}
              startIcon={
                <PintrestIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__o3GjM
                  )}
                  role={"img"}
                />
              }
            />
          </div>
        </p.Stack>

        <Button
          className={classNames("__wab_instance", sty.button__lcodg)}
          endIcon={
            <Icon15Icon
              className={classNames(
                defaultcss.all,
                projectcss.all,
                sty.svg__z0Vcv
              )}
              role={"img"}
            />
          }
          showEndIcon={"showEndIcon"}
          startIcon={
            <Icon15Icon
              className={classNames(
                defaultcss.all,
                projectcss.all,
                sty.svg___6WAwl
              )}
              role={"img"}
            />
          }
        >
          {"English"}
        </Button>
      </p.Stack>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "text"],
  text: ["text"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicCopyrightSocialLanguage__ArgProps,
      internalVariantPropNames: PlasmicCopyrightSocialLanguage__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicCopyrightSocialLanguage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCopyrightSocialLanguage";
  } else {
    func.displayName = `PlasmicCopyrightSocialLanguage.${nodeName}`;
  }
  return func;
}

export const PlasmicCopyrightSocialLanguage = Object.assign(
  // Top-level PlasmicCopyrightSocialLanguage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    text: makeNodeComponent("text"),
    // Metadata about props expected for PlasmicCopyrightSocialLanguage
    internalVariantProps: PlasmicCopyrightSocialLanguage__VariantProps,
    internalArgProps: PlasmicCopyrightSocialLanguage__ArgProps
  }
);

export default PlasmicCopyrightSocialLanguage;
/* prettier-ignore-end */
