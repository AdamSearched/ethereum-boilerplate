// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wsRXF2j5MAPa2EH2XkCbWH
// Component: 1Xj9IcyNJkl8
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css"; // plasmic-import: wsRXF2j5MAPa2EH2XkCbWH/projectcss
import * as sty from "./PlasmicRating.module.css"; // plasmic-import: 1Xj9IcyNJkl8/css
import EmptyStarIcon from "./icons/PlasmicIcon__EmptyStar"; // plasmic-import: J79J3Fn5i6AO/icon
import FullStarIcon from "./icons/PlasmicIcon__FullStar"; // plasmic-import: 4Q_PS3iFBpck/icon
import HalfStarIcon from "./icons/PlasmicIcon__HalfStar"; // plasmic-import: XzTU59vWjWK-/icon

export const PlasmicRating__VariantProps = new Array("rating");

export const PlasmicRating__ArgProps = new Array();

function PlasmicRating__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        defaultcss.all,
        projectcss.all,
        projectcss.root_reset,
        sty.root
      )}
    >
      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "twoHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "oneHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "half")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "three")
            ? FullStarIcon
            : hasVariant(variants, "rating", "two")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "one")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, projectcss.all, sty.svg__ssgFq, {
          [sty.svg__rating_five__ssgFq1YxGf]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__ssgFqOqM7E]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four__ssgFQi5VBc]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_half__ssgFQulQkC]: hasVariant(
            variants,
            "rating",
            "half"
          ),

          [sty.svg__rating_oneHalf__ssgFqrlw3L]: hasVariant(
            variants,
            "rating",
            "oneHalf"
          ),

          [sty.svg__rating_one__ssgFq24X2]: hasVariant(
            variants,
            "rating",
            "one"
          ),

          [sty.svg__rating_threeHalf__ssgFQfQjM9]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          ),

          [sty.svg__rating_three__ssgFQiD7Mj]: hasVariant(
            variants,
            "rating",
            "three"
          ),

          [sty.svg__rating_twoHalf__ssgFqkWprw]: hasVariant(
            variants,
            "rating",
            "twoHalf"
          ),

          [sty.svg__rating_two__ssgFQg0Lqy]: hasVariant(
            variants,
            "rating",
            "two"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "twoHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "oneHalf")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "three")
            ? FullStarIcon
            : hasVariant(variants, "rating", "two")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, projectcss.all, sty.svg__gsdb3, {
          [sty.svg__rating_five__gsdb31YxGf]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__gsdb3OqM7E]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four__gsdb3I5VBc]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_oneHalf__gsdb3Rlw3L]: hasVariant(
            variants,
            "rating",
            "oneHalf"
          ),

          [sty.svg__rating_threeHalf__gsdb3FQjM9]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          ),

          [sty.svg__rating_three__gsdb3ID7Mj]: hasVariant(
            variants,
            "rating",
            "three"
          ),

          [sty.svg__rating_twoHalf__gsdb3KWprw]: hasVariant(
            variants,
            "rating",
            "twoHalf"
          ),

          [sty.svg__rating_two__gsdb3G0Lqy]: hasVariant(
            variants,
            "rating",
            "two"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "twoHalf")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "three")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, projectcss.all, sty.svg__bU2D0, {
          [sty.svg__rating_five__bU2D01YxGf]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__bU2D0OqM7E]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four__bU2D0I5VBc]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_threeHalf__bU2D0FQjM9]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          ),

          [sty.svg__rating_three__bU2D0ID7Mj]: hasVariant(
            variants,
            "rating",
            "three"
          ),

          [sty.svg__rating_twoHalf__bU2D0KWprw]: hasVariant(
            variants,
            "rating",
            "twoHalf"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, projectcss.all, sty.svg__li2Df, {
          [sty.svg__rating_five__li2Df1YxGf]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__li2DfOqM7E]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four__li2DFi5VBc]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_threeHalf__li2DFfQjM9]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? HalfStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, projectcss.all, sty.svg__cKdT, {
          [sty.svg__rating_five__cKdT1YxGf]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__cKdTOqM7E]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          )
        })}
        role={"img"}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicRating__ArgProps,
      internalVariantPropNames: PlasmicRating__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicRating__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicRating";
  } else {
    func.displayName = `PlasmicRating.${nodeName}`;
  }
  return func;
}

export const PlasmicRating = Object.assign(
  // Top-level PlasmicRating renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicRating
    internalVariantProps: PlasmicRating__VariantProps,
    internalArgProps: PlasmicRating__ArgProps
  }
);

export default PlasmicRating;
/* prettier-ignore-end */
