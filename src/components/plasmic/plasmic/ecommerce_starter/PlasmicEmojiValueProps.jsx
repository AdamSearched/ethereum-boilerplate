// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wsRXF2j5MAPa2EH2XkCbWH
// Component: hziPCigE40Ol
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Value from "../../Value"; // plasmic-import: u3HUpc_KJfUr/component
import Button from "../../Button"; // plasmic-import: LPkJNTjVmA5d/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css"; // plasmic-import: wsRXF2j5MAPa2EH2XkCbWH/projectcss
import * as sty from "./PlasmicEmojiValueProps.module.css"; // plasmic-import: hziPCigE40Ol/css
import PlaneIcon from "./icons/PlasmicIcon__Plane"; // plasmic-import: dACW4CNxAiAj/icon
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: sth0rOpjGBUT/icon
import DocumentIcon from "./icons/PlasmicIcon__Document"; // plasmic-import: Hc5XEg5ZBHkC/icon
import LockIcon from "./icons/PlasmicIcon__Lock"; // plasmic-import: bSjUcOohvTSQ/icon

export const PlasmicEmojiValueProps__VariantProps = new Array();

export const PlasmicEmojiValueProps__ArgProps = new Array("children");

function PlasmicEmojiValueProps__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        defaultcss.all,
        projectcss.all,
        projectcss.root_reset,
        sty.root
      )}
    >
      {p.renderPlasmicSlot({
        defaultContents: (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.freeBox__glTxZ
            )}
          >
            <Value
              children2={
                <Button
                  className={classNames("__wab_instance", sty.button__laGot)}
                  colors={"black"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(
                        defaultcss.all,
                        projectcss.all,
                        sty.svg__iop5V
                      )}
                      role={"img"}
                    />
                  }
                  rounded={"rounded"}
                  size={"large"}
                >
                  {"Read our letter"}
                </Button>
              }
              className={classNames("__wab_instance", sty.value__lIPp)}
              icon={
                <PlaneIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg___9XZv
                  )}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  defaultcss.__wab_text,
                  sty.text__tH5Zh
                )}
              >
                {"Worldwide shipping"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  defaultcss.__wab_text,
                  sty.text___0Ilet
                )}
              >
                {"Special financing and earn rewards."}
              </div>
            </Value>

            <Value
              children2={
                <Button
                  className={classNames("__wab_instance", sty.button__sZxxs)}
                  colors={"black"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(
                        defaultcss.all,
                        projectcss.all,
                        sty.svg__bOe7Z
                      )}
                      role={"img"}
                    />
                  }
                  rounded={"rounded"}
                  size={"large"}
                >
                  {"Read our letter"}
                </Button>
              }
              className={classNames("__wab_instance", sty.value__vBoF8)}
              icon={
                <DocumentIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__vj5L3
                  )}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  defaultcss.__wab_text,
                  sty.text__ga2Kk
                )}
              >
                {"30-day guarantee"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  defaultcss.__wab_text,
                  sty.text__gNoKm
                )}
              >
                {"Free return policy."}
              </div>
            </Value>

            <Value
              children2={
                <Button
                  className={classNames("__wab_instance", sty.button__mrUdA)}
                  colors={"black"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(
                        defaultcss.all,
                        projectcss.all,
                        sty.svg___8JFAc
                      )}
                      role={"img"}
                    />
                  }
                  rounded={"rounded"}
                  size={"large"}
                >
                  {"Read our letter"}
                </Button>
              }
              className={classNames("__wab_instance", sty.value__uy72N)}
              icon={
                <LockIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__diNuQ
                  )}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  defaultcss.__wab_text,
                  sty.text___81WVf
                )}
              >
                {"Secured payments"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  defaultcss.__wab_text,
                  sty.text__ra4RF
                )}
              >
                {"We accept major credit cards."}
              </div>
            </Value>
          </p.Stack>
        ),

        value: args.children
      })}
    </section>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicEmojiValueProps__ArgProps,
      internalVariantPropNames: PlasmicEmojiValueProps__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicEmojiValueProps__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicEmojiValueProps";
  } else {
    func.displayName = `PlasmicEmojiValueProps.${nodeName}`;
  }
  return func;
}

export const PlasmicEmojiValueProps = Object.assign(
  // Top-level PlasmicEmojiValueProps renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicEmojiValueProps
    internalVariantProps: PlasmicEmojiValueProps__VariantProps,
    internalArgProps: PlasmicEmojiValueProps__ArgProps
  }
);

export default PlasmicEmojiValueProps;
/* prettier-ignore-end */
